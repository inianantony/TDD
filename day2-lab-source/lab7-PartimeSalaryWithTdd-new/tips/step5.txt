加入第三個 test case, 描述第二段加班的 scenario, 第一段加班薪水比例是1.66，第二段加班則是2.0

1. 加入 test method
		[TestMethod]
		public void TestCalculateSalary_加班3小時_加班頭2小時比例為1點66_加班第3小時起比例為2_薪資應為1332()
		{
			//Scenario: 加班3小時：
			//    上班8小時，時薪100乘以8，加班前2小時，加班費100乘以1.66乘以2，加班第3小時起，加班費100乘以2，薪資應為1332
			//    Given 正常上班一小時薪資為 100
			//    And 加班薪資頭2小時，時薪比例為 1.66
			//    And 加班薪資第3小時開始，時薪比例為 2
			//    And 上班時間為 "2014/8/30 08:00:00"
			//    And 下班時間為 "2014/8/30 20:00:00"
			//    When 呼叫CalculateSalary方法
			//    Then 薪資計算結果應為 1332

			var target = new SalaryCard();
			target.HourlySalary = 100;
			target.FirstOverTimeRatio = 1.66;

			//新增property
			target.SecondOverTimeRatio = 2;
			target.StartTime = new DateTime(2014, 8, 30, 8, 0, 0);
			target.EndTime = new DateTime(2014, 8, 30, 20, 0, 0);

			//act
			var actual = target.CalculateSalary();

			//assert
			var expected = 1332;
			Assert.AreEqual(expected, actual);
		}
		
2. 想辦法建置通過，所以在target.SecondOverTimeRatio產生新的property。

3. 建置通過，執行測試，得到一個新的紅燈。