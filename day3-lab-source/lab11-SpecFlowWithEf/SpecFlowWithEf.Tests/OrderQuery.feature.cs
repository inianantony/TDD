// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18408
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SpecFlowWithEf.Tests
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class OrderQueryFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "OrderQuery.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "OrderQuery", "", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "OrderQuery")))
            {
                SpecFlowWithEf.Tests.OrderQueryFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("依據姓名、訂單日期起、訂單日期迄條件，查出顧客的訂單")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "OrderQuery")]
        public virtual void 依據姓名訂單日期起訂單日期迄條件查出顧客的訂單()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("依據姓名、訂單日期起、訂單日期迄條件，查出顧客的訂單", ((string[])(null)));
#line 4
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "CustomerId",
                        "OrderDateStart",
                        "OrderDateEnd"});
            table1.AddRow(new string[] {
                        "Joey",
                        "2014-07-03",
                        "2014-07-07"});
#line 5
 testRunner.Given("查詢條件為", ((string)(null)), table1, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "CustomerID",
                        "CompanyName"});
            table2.AddRow(new string[] {
                        "Joey",
                        "SkillTree"});
#line 8
 testRunner.And("預計Customers資料應有", ((string)(null)), table2, "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "CustomerID",
                        "OrderDate",
                        "ShipCity"});
            table3.AddRow(new string[] {
                        "Joey",
                        "2014-07-02",
                        "Taipei"});
            table3.AddRow(new string[] {
                        "Joey",
                        "2014-07-03",
                        "Taipei"});
            table3.AddRow(new string[] {
                        "Joey",
                        "2014-07-04",
                        "Changhua"});
            table3.AddRow(new string[] {
                        "Joey",
                        "2014-07-05",
                        "Changhua"});
            table3.AddRow(new string[] {
                        "Joey",
                        "2014-07-08",
                        "Changhua"});
#line 11
 testRunner.And("預計Orders資料應有", ((string)(null)), table3, "And ");
#line 18
 testRunner.When("呼叫Query方法", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "CustomerID",
                        "OrderDate",
                        "ShipCity"});
            table4.AddRow(new string[] {
                        "Joey",
                        "2014-07-03",
                        "Taipei"});
            table4.AddRow(new string[] {
                        "Joey",
                        "2014-07-04",
                        "Changhua"});
            table4.AddRow(new string[] {
                        "Joey",
                        "2014-07-05",
                        "Changhua"});
#line 19
 testRunner.Then("查詢結果應為", ((string)(null)), table4, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
